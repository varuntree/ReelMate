rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Match any document in the users collection
    match /users/{userId} {
      // Allow read/write only if the user is authenticated and the userId matches their auth ID
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Additional validation rules for specific fields
      match /reelState {
        allow write: if request.resource.data.keys().hasAll(['prompt', 'clips', 'textStyle'])
                    && request.resource.data.clips is list;
      }
      
      // Rules for reels subcollection
      match /reels/{reelId} {
        // Allow read operations if authenticated and owns the document
        allow read: if request.auth != null && request.auth.uid == userId;
        
        // Allow create if authenticated, owns the document, and data is valid
        allow create: if request.auth != null 
                     && request.auth.uid == userId
                     && request.resource.data.keys().hasAll(['id', 'userId', 'createdAt', 'updatedAt', 'status', 'reelState'])
                     && request.resource.data.userId == userId
                     && request.resource.data.status in ['saved', 'scheduled', 'approval', 'published']
                     && request.resource.data.createdAt is number
                     && request.resource.data.updatedAt is number;
                     
        // Allow update if authenticated, owns the document, and only updating allowed fields
        allow update: if request.auth != null 
                     && request.auth.uid == userId
                     && request.resource.data.userId == resource.data.userId
                     && request.resource.data.status in ['saved', 'scheduled', 'approval', 'published']
                     && request.resource.data.updatedAt is number
                     && request.resource.data.updatedAt > resource.data.updatedAt;
      }
      
      // Validate generations and worker nodes updates
      allow update: if request.resource.data.diff(resource.data).affectedKeys()
                      .hasAny(['generationsLeft', 'workerNodesLeft'])
                   && request.resource.data.generationsLeft is number
                   && request.resource.data.workerNodesLeft is number
                   && request.resource.data.generationsLeft >= 0
                   && request.resource.data.workerNodesLeft >= 0;
    }
  }
} 